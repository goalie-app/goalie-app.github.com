{"version":3,"sources":["util/LocalStorage/index.js","client.js","components/LoadingAndErrorHandler/index.js","components/LogIn/index.js","components/Button/index.js","components/Header/Hamburger/index.js","components/Header/index.js","models/Completion.js","models/Completions.js","models/Goal.js","components/context/Auth.js","models/Goals.js","components/context/SelectedDate.js","components/Completion/Tick/index.js","components/Completion/index.js","components/Goals/index.js","models/Auth.js","util/combine-class/index.js","components/modals/Modal/index.js","components/modals/Confirmation/index.js","components/DeleteGoal/index.js","components/Goal/HeatMap/index.js","models/Notes.js","components/Goal/Notes/Delete/index.js","components/Goal/Notes/index.js","components/Goal/index.js","components/NewGoal/index.js","pages/EditGoal/index.js","components/NewNote/index.js","App.js","index.js","components/Header/styles.module.css","components/Goal/styles.module.css","components/Completion/Tick/styles.module.css","components/Goal/HeatMap/styles.module.css","components/Goal/Notes/styles.module.css","components/NewGoal/styles.module.css","pages/EditGoal/styles.module.css","components/NewNote/styles.module.css","components/Completion/styles.module.css","components/Goals/styles.module.css","components/modals/Confirmation/styles.module.css","components/modals/Modal/styles.module.css","components/Button/styles.module.css","components/Header/Hamburger/styles.module.css","components/DeleteGoal/styles.module.css","components/Goal/Notes/Delete/styles.module.css"],"names":["window","client","ApolloClient","uri","concat","process","LoadingAndErrorHandler","renderError","react_default","a","createElement","_this","props","error","message","this","loading","children","Component","CREATE_SESSION_MUTATION","gql","_templateObject","LogIn","nameInput","React","createRef","passwordInput","handleSessionCreation","event","preventDefault","createSession","variables","name","current","value","password","rememberToken","userId","setAuth","components_LoadingAndErrorHandler","className","ref","type","onClick","LogInWrapped","_this2","react_apollo_browser_umd","mutation","_ref","data","token","user","id","LogIn_LogIn","Button","styles","button","Hamburger","hamburger","width","height","viewBox","version","xmlns","stroke","strokeWidth","fill","fillRule","x","y","Header","state","open","handleHamburgerClick","setState","closeMenu","headerContentsClass","headerContents","headerContentsMobile","header","Header_Hamburger","htmlFor","selectedDateLabel","selectedDate","onChange","handleDateChange","Link","link","to","components_Button","logOut","PropTypes","shape","number","isRequired","completedAt","string","arrayOf","Completion","latestCompletion","CompletionModel","completions","CompletionsModel","Goal","createContext","undefined","Tick","background","tick","points","tickCoverClass","ghostTick","tickCover","checked","tickCoverChecked","PureComponent","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","renderTickBox","Fragment","Tick_Tick","renderButton","buttonText","inherits","createClass","key","tickBox","defaultProps","CREATE_COMPLETION_MUTATION","Completion_templateObject","DELETE_COMPLETION_MUTATION","_templateObject2","CompletionWrapped","SelectedDate","Consumer","Auth","auth","createCompletion","createPayload","deleteCompletion","deletePayload","completion","foundCompletion","goal","dateString","date","Date","forEach","completionDate","getFullYear","getMonth","getDate","goalCompletionForDate","Completion_Completion","completionId","toISOString","goalId","GOALS_QUERY","Goals_templateObject","Goals","goalName","completionContainer","Completion_CompletionWrapped","goals","map","renderGoal","GoalsWrapped","query","Goals_Goals","combine_class","filter","argument","join","Modal","cc","modal","modalInner","onClose","ConfirmationModal","modals_Modal","text","onConfirm","confirm","onCancel","cancel","DELETE_GOAL_MUTATION","DeleteGoal_templateObject","Delete","modalOpen","handleDelete","deleteGoal","renderConfirmationModal","Confirmation","called","Redirect","push","DeleteWrapped","_this3","update","cache","writeQuery","_ref2","DeleteGoal_Delete","HeatMap","startDate","endDate","changeDate","defineProperty","target","heatMap","dateForm","label","min","max","step","react_calendar_heatmap_umd_default","values","note","body","DELETE_NOTE_MUTATION","Delete_templateObject","deleteNote","noteId","refetchQueries","NOTES_QUERY","Delete_Delete","Notes_templateObject","Notes","notes","noteHeader","Notes_Delete","renderNotes","NotesWrapped","Notes_Notes","GOAL_QUERY","Goal_templateObject","title","controls","spacer","newGoalButton","editGoalButton","DeleteGoal","Goal_Notes","Goal_HeatMap","GoalWrapped","parseInt","match","params","Goal_Goal","CREATE_GOAL_MUTATION","NewGoal_templateObject","NewGoal","handleGoalCreation","createGoal","newGoal","inputContainer","NewGoalWrapped","readQuery","NewGoal_NewGoal","UPDATE_GOAL_MUTATION","EditGoal_templateObject","EditGoal","handleGoalUpdate","updateGoal","editGoal","autoFocus","EditGoalWrapped","_ref3","EditGoal_EditGoal","CREATE_NOTE_MUTATION","NewNote_templateObject","NewNote","bodyInput","handleNoteCreation","createNote","newNote","bodyField","NewNoteWrapped","NewNote_NewNote","defaultDate","today","month","String","App","LocalStorage","setItem","getItem","Provider","BrowserRouter","components_Header","Route","exact","path","component","components_LogIn","ReactDOM","render","src_App","document","getElementById","module","exports","hideTick"],"mappings":"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","file":"static/js/main.ac41adf5.chunk.js","sourcesContent":["export default window.localStorage\n","import ApolloClient from \"apollo-boost\";\n\nconst backend = process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001';\n\nconst client = new ApolloClient({\n  uri: `${backend}/gql`\n});\n\nexport default client;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoadingAndErrorHandler extends Component {\n  renderError = () => (\n    <div>\n      <h2>Error</h2>\n      <p>{this.props.error.message}</p>\n    </div>\n  )\n\n  render() {\n    if (this.props.loading) return <p>Loading...</p>;\n    if (this.props.error) return this.renderError();\n\n    return this.props.children\n  }\n}\n\nLoadingAndErrorHandler.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.shape({ message: PropTypes.string.isRequired }),\n  children: PropTypes.node\n};\n\nexport default LoadingAndErrorHandler;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport client from 'client';\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\n\nconst CREATE_SESSION_MUTATION = gql`\n  mutation CreateSession($name: String!, $password: String!) {\n    createSession(name: $name, password: $password) {\n      user { id }\n      token\n    }\n  }\n`;\n\nclass LogIn extends Component {\n  nameInput = React.createRef();\n  passwordInput = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.rememberToken && this.props.userId) {\n      this.props.setAuth({\n        rememberToken: this.props.rememberToken,\n        userId: this.props.userId,\n      })\n    }\n  }\n\n  handleSessionCreation = event => {\n    event.preventDefault();\n\n    this.props.createSession({\n      variables: {\n        name: this.nameInput.current.value,\n        password: this.passwordInput.current.value\n      }\n    });\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <form>\n          <input className='name' ref={this.nameInput}/>\n          <input className='password' type=\"password\" ref={this.passwordInput}/>\n          <button onClick={this.handleSessionCreation}>Log In</button>\n        </form>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nLogIn.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  createSession: PropTypes.func.isRequired,\n  setAuth: PropTypes.func.isRequired\n}\n\nexport { LogIn };\n\nclass LogInWrapped extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Mutation mutation={CREATE_SESSION_MUTATION}>\n          {\n            (createSession, { data, loading, error }) => {\n              const rememberToken = (\n                data &&\n                data.createSession &&\n                data.createSession.token\n              )\n\n              const userId = (\n                data &&\n                data.createSession &&\n                data.createSession.user &&\n                data.createSession.user.id\n              )\n\n              return (\n                <LogIn\n                  loading={loading}\n                  error={error}\n                  setAuth={this.props.setAuth}\n                  createSession={createSession}\n                  rememberToken={rememberToken}\n                  userId={userId}\n                />\n              )\n            }\n          }\n        </Mutation>\n      </ApolloProvider>\n    );\n  }\n}\n\nLogInWrapped.propTypes = {\n  setAuth: PropTypes.func.isRequired\n}\n\nexport default LogInWrapped;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.css';\n\nclass Button extends Component {\n  render() {\n    return (\n      <button\n        onClick={this.props.onClick}\n        className={`${this.props.className} ${styles.button}`}\n      >\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport styles from \"./styles.module.css\";\nimport PropTypes from 'prop-types';\n\nclass Hamburger extends Component {\n  render() {\n    return (\n      <svg\n        onClick={this.props.onClick}\n        className={`${styles.hamburger} ${this.props.className}`}\n        width=\"131px\"\n        height=\"131px\"\n        viewBox=\"0 0 131 131\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          id=\"Page-1\"\n          stroke=\"none\"\n          strokeWidth=\"1\"\n          fill=\"none\"\n          fillRule=\"evenodd\"\n        >\n          <rect\n            id=\"Rectangle\"\n            fill=\"#000000\"\n            x=\"4\"\n            y=\"8\"\n            width=\"123\"\n            height=\"22\"\n          />\n          <rect\n            id=\"Rectangle\"\n            fill=\"#000000\"\n            x=\"4\"\n            y=\"55\"\n            width=\"123\"\n            height=\"22\"\n          />\n          <rect\n            id=\"Rectangle\"\n            fill=\"#000000\"\n            x=\"4\"\n            y=\"101\"\n            width=\"123\"\n            height=\"22\"\n          />\n        </g>\n      </svg>\n    );\n  }\n}\n\nHamburger.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n}\n\nexport default Hamburger;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"components/Button\";\nimport Hamburger from './Hamburger';\nimport styles from \"./styles.module.css\";\n\nclass Header extends Component {\n  state = { open: false }\n\n  handleHamburgerClick = () => {\n    this.setState({ open: !this.state.open });\n  }\n\n  closeMenu = () => {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const headerContentsClass = `\n      ${styles.headerContents}\n      ${this.state.open && styles.headerContentsMobile}\n    `;\n\n    return (\n      <header className={styles.header}>\n        <Hamburger\n          className={styles.hamburger}\n          onClick={this.handleHamburgerClick}\n        />\n\n        <div className={headerContentsClass}>\n          <label htmlFor=\"selected-date\" className={styles.selectedDateLabel}>\n            Selected Date\n          </label>\n\n          <input\n            className={styles.selectedDate}\n            name=\"selected-date\"\n            type=\"date\"\n            value={this.props.selectedDate}\n            onChange={this.props.handleDateChange}\n          />\n\n          <Link\n            onClick={this.closeMenu}\n            className={styles.link}\n            to={\"/new-goal\"}\n          >\n            New Goal\n          </Link>\n\n          <Link\n            onClick={this.closeMenu}\n            className={styles.link}\n            to={\"/\"}\n          >\n            View Goals\n          </Link>\n\n          <Button onClick={this.props.logOut} className={styles.button}>\n            Log Out\n          </Button>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logOut: PropTypes.func.isRequired,\n  selectedDate: PropTypes.string.isRequired,\n  handleDateChange: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  completedAt: PropTypes.string.isRequired\n})\n","import PropTypes from 'prop-types';\nimport Completion from 'models/Completion';\n\nexport default PropTypes.arrayOf(Completion)\n","import PropTypes from 'prop-types';\nimport CompletionModel from 'models/Completion';\nimport CompletionsModel from 'models/Completions';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  latestCompletion: CompletionModel,\n  completions: CompletionsModel\n})\n\nexport const goalCompletionForDate = ({ goal, dateString }) => {\n  const date = new Date(dateString);\n  let foundCompletion;\n\n  goal.completions.forEach(completion => {\n    const completionDate = new Date(completion.completedAt)\n    if (\n      completionDate.getFullYear() === date.getFullYear() &&\n      completionDate.getMonth() === date.getMonth() &&\n      completionDate.getDate() === date.getDate()\n    ) { foundCompletion = completion }\n  });\n\n  return foundCompletion\n};\n","import React from 'react';\n\nexport default React.createContext({\n  rememberToken: undefined,\n  userId: undefined\n})\n","import PropTypes from 'prop-types';\nimport Goal from 'models/Goal';\n\nexport default PropTypes.arrayOf(Goal)\n","import React from 'react';\n\nexport default React.createContext()\n","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from \"./styles.module.css\";\n\nexport default class Tick extends PureComponent {\n  get tickCoverClass() {\n    return (\n      `\n        ${styles.background}\n        ${styles.tickCover}\n        ${this.props.checked && styles.tickCoverChecked}\n      `\n    );\n  }\n\n  render() {\n    return (\n      <svg\n        width=\"35px\"\n        height=\"35px\"\n        viewBox=\"0 0 630 630\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          stroke=\"none\"\n          strokeWidth=\"1\"\n          fill=\"none\"\n          fillRule=\"evenodd\"\n        >\n          <rect\n            className={styles.background}\n            fill=\"#8D5687\"\n            x=\"0\"\n            y=\"0\"\n            width=\"630\"\n            height=\"630\"\n          />\n          <polyline\n            className={styles.tick}\n            stroke=\"none\"\n            strokeWidth=\"100\"\n            points=\"109 293.646424 229.186565 440 529 152\"\n          />\n          <rect\n            className={this.tickCoverClass}\n            fill=\"#8D5687\"\n            x=\"0\"\n            y=\"0\"\n            width=\"630\"\n            height=\"630\"\n          />\n          <polyline\n            className={`${styles.ghostTick} ${styles.tick}`}\n            stroke=\"none\"\n            strokeWidth=\"100\"\n            points=\"109 293.646424 229.186565 440 529 152\"\n          />\n        </g>\n      </svg>\n    )\n  }\n}\n\nTick.propTypes = {\n  checked: PropTypes.bool.isRequired\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport client from \"client\";\nimport AuthContext from \"components/context/Auth\";\nimport SelectedDateContext from \"components/context/SelectedDate\";\nimport Button from \"components/Button\";\nimport LoadingAndErrorHandler from \"components/LoadingAndErrorHandler\";\nimport GoalModel, { goalCompletionForDate } from \"models/Goal\";\nimport Tick from './Tick';\nimport styles from \"./styles.module.css\";\n\nexport class Completion extends Component {\n  renderTickBox = () => (\n    <React.Fragment>\n      <input\n        name=\"completed\"\n        type=\"checkbox\"\n        checked={this.props.checked}\n        onChange={this.props.onClick}\n      />\n      <Tick checked={this.props.checked} />\n    </React.Fragment>\n  )\n\n  renderButton = () => (\n    <Button className={styles.button}>\n      <p className={styles.buttonText}>\n        {this.props.checked ? 'Uncomplete Goal' : 'Complete Goal' }\n      </p>\n\n      <Tick checked={this.props.checked} />\n    </Button>\n  )\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={false}\n        error={this.props.error}\n      >\n        <div\n          className={`${styles.tickBox} ${this.props.className}`}\n          onClick={this.props.loading ? () => {} : this.props.onClick}\n        >\n          {this.props.button ? this.renderButton() : this.renderTickBox()}\n        </div>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nCompletion.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  onClick: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  button: PropTypes.bool,\n  className: PropTypes.string\n};\n\nCompletion.defaultProps = {\n  button: false\n}\n\nconst CREATE_COMPLETION_MUTATION = gql`\n  mutation CreateCompletion(\n    $auth: AuthInput!\n    $goalId: Int!\n    $completedAt: ISO8601DateTime!\n  ) {\n    createCompletion(auth: $auth, goalId: $goalId, completedAt: $completedAt) {\n      goals {\n        id\n        completions {\n          completedAt\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst DELETE_COMPLETION_MUTATION = gql`\n  mutation DeleteCompletion($auth: AuthInput!, $completionId: Int!) {\n    deleteCompletion(auth: $auth, completionId: $completionId) {\n      goals {\n        id\n        completions {\n          id\n        }\n      }\n    }\n  }\n`;\n\n\nexport default class CompletionWrapped extends Component {\n  render() {\n    return (\n      <SelectedDateContext.Consumer>\n        {selectedDate => (\n          <AuthContext.Consumer>\n            {auth => (\n              <ApolloProvider client={client}>\n                <Mutation mutation={CREATE_COMPLETION_MUTATION}>\n                  {(createCompletion, createPayload) => (\n                    <Mutation mutation={DELETE_COMPLETION_MUTATION}>\n                      {(deleteCompletion, deletePayload) => {\n                        const completion = goalCompletionForDate({\n                          goal: this.props.goal,\n                          dateString: selectedDate\n                        });\n\n                        const checked = !!completion;\n\n                        const create = event => {\n                          event.preventDefault();\n\n                          createCompletion({\n                            variables: {\n                              auth,\n                              completedAt: new Date(selectedDate).toISOString(),\n                              goalId: this.props.goal.id\n                            }\n                          });\n                        };\n\n                        const remove = event => {\n                          event.preventDefault();\n\n                          deleteCompletion({\n                            variables: {\n                              auth,\n                              completionId: completion.id\n                            }\n                          });\n                        };\n\n                        return (\n                          <Completion\n                            loading={createPayload.loading || deletePayload.loading}\n                            error={createPayload.error || deletePayload.error}\n                            onClick={checked ? remove : create }\n                            checked={checked}\n                            button={this.props.button}\n                            className={this.props.className}\n                          />\n                        )\n                      }}\n                    </Mutation>\n                  )}\n                </Mutation>\n              </ApolloProvider>\n            )}\n          </AuthContext.Consumer>\n        )}\n      </SelectedDateContext.Consumer>\n    );\n  }\n}\n\nCompletionWrapped.propTypes = {\n  goal: GoalModel,\n  button: PropTypes.bool,\n  className: PropTypes.string\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Link } from 'react-router-dom'\nimport client from 'client';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport GoalsModel from 'models/Goals';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport Completion from 'components/Completion';\nimport styles from './styles.module.css';\n\nexport const GOALS_QUERY = gql`\n  query Goals($auth: AuthInput!){\n    goals(auth: $auth) {\n      id\n      name\n      dueDate\n      completions {\n        id\n        completedAt\n      }\n    }\n  }\n`;\n\nclass Goals extends Component {\n  renderGoal(goal) {\n    return (\n      <Link to={`goals/${goal.id}`} key={goal.id} className={styles.goal}>\n        <h3 className={styles.goalName}>{goal.name}</h3>\n        <div className={styles.completionContainer}>\n          <Completion goal={goal} />\n        </div>\n      </Link>\n    )\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        {this.props.goals.map(goal => this.renderGoal(goal))}\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nGoals.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  goals: GoalsModel.isRequired\n}\n\nexport { Goals };\n\nclass GoalsWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Query query={GOALS_QUERY} variables={{ auth }}>\n              {({ data, loading, error }) => (\n                <Goals\n                  loading={loading}\n                  error={error}\n                  goals={(data && data.goals) || []}\n                />\n              )}\n            </Query>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nexport default GoalsWrapped;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  userId: PropTypes.number.isRequired,\n  rememberToken: PropTypes.string.isRequired,\n})\n","export default (...args: Array<string | void>): string =>\n  args.filter(argument => argument !== undefined).join(' ');\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cc from 'util/combine-class';\nimport styles from './styles.module.css';\n\nclass Modal extends Component {\n  render() {\n    return (\n      <div className={cc(styles.modal, this.props.className)}>\n        <div className={styles.modalInner}>\n          {this.props.onClose && <button>x</button>}\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'components/modals/Modal';\nimport Button from 'components/Button';\nimport styles from './styles.module.css';\n\nclass ConfirmationModal extends Component {\n  render() {\n    return (\n      <Modal>\n        <p className={styles.text}>{this.props.text}</p>\n\n        <Button\n          onClick={this.props.onConfirm}\n          className={styles.confirm}\n        >\n          Confirm\n        </Button>\n\n        <Button\n          onClick={this.props.onCancel}\n          className={styles.cancel}\n        >\n          Cancel\n        </Button>\n      </Modal>\n    );\n  }\n}\n\nConfirmationModal.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default ConfirmationModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport client from 'client';\nimport { GOALS_QUERY } from 'components/Goals';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport AuthModel from 'models/Auth';\nimport { Redirect } from 'react-router';\nimport Button from 'components/Button';\nimport ConfirmationModal from 'components/modals/Confirmation';\nimport styles from './styles.module.css';\n\nconst DELETE_GOAL_MUTATION = gql`\n  mutation DeleteGoal($auth: AuthInput!, $goalId: Int!){\n    deleteGoal(auth: $auth, goalId: $goalId) {\n      goals {\n        id\n      }\n    }\n  }\n`;\n\nclass Delete extends Component {\n  state = {\n    modalOpen: false\n  }\n\n  handleDelete = () => {\n    this.props.deleteGoal({\n      variables: {\n        auth: this.props.auth,\n        goalId: this.props.goalId\n      }\n    });\n  }\n\n  renderConfirmationModal = () => {\n    if (!this.state.modalOpen) return null;\n\n    return (\n      <ConfirmationModal\n        text='Are you sure want to delete this goal?'\n        onConfirm={this.handleDelete}\n        onCancel={() => this.setState({ modalOpen: false })}\n      />\n    )\n  }\n\n  render() {\n    if (this.props.called && !this.props.loading) {\n      return <Redirect push to=\"/\" />\n    }\n\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <Button\n          onClick={() => this.setState({ modalOpen: true })}\n          className={styles.button}\n        >\n          Delete Goal\n        </Button>\n\n        {this.renderConfirmationModal()}\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nDelete.propTypes = {\n  called: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  goalId: PropTypes.number.isRequired,\n  auth: AuthModel.isRequired,\n  deleteGoal: PropTypes.func.isRequired,\n}\n\nexport { Delete };\n\nclass DeleteWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Mutation\n              mutation={DELETE_GOAL_MUTATION}\n              update={(cache, { data }) => {\n                cache.writeQuery({\n                  query: GOALS_QUERY,\n                  variables: { auth },\n                  data: { goals: data.deleteGoal.goals },\n                });\n              }}\n            >\n              {(deleteGoal, { loading, error, called }) => (\n                <Delete\n                  called={called}\n                  loading={loading}\n                  error={error}\n                  auth={auth}\n                  goalId={this.props.goalId}\n                  deleteGoal={deleteGoal}\n                />\n              )}\n            </Mutation>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nDeleteWrapped.propTypes = {\n  goalId: PropTypes.number.isRequired\n}\n\nexport default DeleteWrapped;\n","import React, { Component } from 'react';\nimport CompletionsModel from 'models/Completions';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\nimport styles from './styles.module.css';\n\nclass HeatMap extends Component {\n  state = {\n    startDate: new Date().getFullYear(),\n    endDate: new Date().getFullYear() + 1\n  }\n\n  changeDate = (event) => {\n    event.preventDefault()\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  render() {\n    return (\n      <div className={styles.heatMap}>\n        <h2 className={styles.header}>Historical Completions</h2>\n        <form className={styles.dateForm}>\n          <label\n            htmlFor=\"startDate\"\n            className={styles.label}\n          >\n            Start Year\n          </label>\n          <input\n            className={styles.startDate}\n            name='startDate'\n            type=\"number\"\n            min=\"2020\"\n            max=\"3000\"\n            step=\"1\"\n            value={this.state.startDate}\n            onChange={this.changeDate}\n          />\n\n          <label\n            htmlFor=\"endDate\"\n            className={styles.label}\n          >\n            End Year\n          </label>\n          <input\n            name='endDate'\n            type=\"number\"\n            min=\"2019\"\n            max=\"3000\"\n            step=\"1\"\n            value={this.state.endDate}\n            onChange={this.changeDate}\n          />\n        </form>\n\n        <CalendarHeatmap\n          startDate={`${this.state.startDate - 1}-12-31`}\n          endDate={`${this.state.endDate - 1}-12-31`}\n          values={this.props.completions.map(\n            completion => ({ date: completion.completedAt})\n          )}\n        />\n      </div>\n    )\n  }\n}\n\nHeatMap.propTypes = {\n  completions: CompletionsModel.isRequired\n}\n\nexport default HeatMap;\n","import PropTypes from 'prop-types';\n\nconst note = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  body: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired\n})\n\nexport default PropTypes.arrayOf(note)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport client from 'client';\nimport { NOTES_QUERY } from 'components/Goal/Notes';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport AuthModel from 'models/Auth';\nimport Button from 'components/Button';\nimport styles from './styles.module.css';\n\nconst DELETE_NOTE_MUTATION = gql`\n  mutation DeleteNote($auth: AuthInput!, $noteId: Int!){\n    deleteNote(auth: $auth, noteId: $noteId) {\n      goal {\n        id\n      }\n    }\n  }\n\n`;\n\nclass Delete extends Component {\n  handleDelete = () => {\n    this.props.deleteNote({\n      variables: {\n        auth: this.props.auth,\n        noteId: this.props.noteId\n      }\n    });\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <Button\n          onClick={this.handleDelete}\n          className={styles.button}\n        >\n          Delete\n        </Button>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nDelete.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  noteId: PropTypes.number.isRequired,\n  auth: AuthModel.isRequired,\n  deleteNote: PropTypes.func.isRequired,\n}\n\nexport { Delete };\n\nclass DeleteWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Mutation\n              mutation={DELETE_NOTE_MUTATION}\n              refetchQueries={[\n                {\n                  query: NOTES_QUERY,\n                  variables: {\n                    auth,\n                    goalId: this.props.goalId\n                  }\n                }\n              ]}\n            >\n              {(deleteNote, { loading, error, called }) => (\n                <Delete\n                  loading={loading}\n                  error={error}\n                  auth={auth}\n                  noteId={this.props.noteId}\n                  deleteNote={deleteNote}\n                />\n              )}\n            </Mutation>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nDeleteWrapped.propTypes = {\n  noteId: PropTypes.number.isRequired,\n  goalId: PropTypes.number.isRequired\n}\n\nexport default DeleteWrapped;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport client from 'client';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport NotesModel from 'models/Notes';\nimport DeleteNote from 'components/Goal/Notes/Delete';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport styles from './styles.module.css';\n\nexport const NOTES_QUERY = gql`\n  query Notes($auth: AuthInput!, $goalId: Int!){\n    notes(auth: $auth, goalId: $goalId) {\n      id\n      date\n      body\n    }\n  }\n`;\n\nclass Notes extends Component {\n  renderNotes() {\n    return this.props.notes.map(note => (\n      <div key={note.id} className={styles.note}>\n        <div className={styles.noteHeader}>\n          <p className={styles.date}>{note.date}</p>\n          <DeleteNote noteId={note.id} goalId={this.props.goalId}/>\n        </div>\n        <p className={styles.body}>{note.body}</p>\n      </div>\n    ))\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <div className={styles.notes}>\n          <h2 className={styles.header}>Notes</h2>\n          {this.renderNotes()}\n        </div>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nNotes.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  notes: NotesModel.isRequired,\n  goalId: PropTypes.number.isRequired\n}\n\nexport { Notes };\n\nclass NotesWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Query\n              query={NOTES_QUERY}\n              variables={{\n                auth,\n                goalId: this.props.goalId\n              }}\n            >\n              {({ data, loading, error }) => (\n                <Notes\n                  loading={loading}\n                  error={error}\n                  notes={(data && data.notes) || []}\n                  goalId={this.props.goalId}\n                />\n              )}\n            </Query>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nNotesWrapped.propTypes = {\n  goalId: PropTypes.number.isRequired\n}\n\nexport default NotesWrapped;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Link } from \"react-router-dom\";\nimport client from 'client';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport GoalModel from 'models/Goal';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport Completion from 'components/Completion';\nimport DeleteGoal from 'components/DeleteGoal';\nimport Button from 'components/Button';\nimport HeatMap from './HeatMap';\nimport Notes from './Notes';\nimport styles from './styles.module.css';\n\nexport const GOAL_QUERY = gql`\n  query Goal($auth: AuthInput!, $goalId: Int!){\n    goal(auth: $auth, goalId: $goalId) {\n      id\n      name\n      dueDate\n      completions {\n        id\n        completedAt\n      }\n    }\n  }\n`;\n\nclass Goal extends Component {\n  renderGoal() {\n    const { goal } = this.props;\n\n    if (!goal) return null;\n\n    return (\n      <div className={styles.goal} key={goal.id}>\n        <h1 className={styles.title}>{goal.name}</h1>\n        <div className={styles.controls}>\n          <Completion goal={goal} button={true} className={styles.completion}/>\n          <div className={styles.spacer} />\n\n          <Link to={`/goals/${goal.id}/new-note`}>\n            <Button className={styles.newGoalButton}>\n              New Note\n            </Button>\n          </Link>\n\n          <div className={styles.spacer} />\n\n          <Link to={`/edit-goal/${goal.id}`}>\n            <Button className={styles.editGoalButton}>\n              Edit\n            </Button>\n          </Link>\n\n          <div className={styles.spacer} />\n\n          <DeleteGoal goalId={goal.id} />\n        </div>\n\n        <Notes goalId={goal.id} />\n        <HeatMap completions={goal.completions} />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        {this.renderGoal()}\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nGoal.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  goal: GoalModel\n}\n\nexport { Goal };\n\nclass GoalWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Query\n              query={GOAL_QUERY}\n              variables={{\n                auth,\n                goalId: parseInt(this.props.match.params.goalId, 10)\n              }}\n            >\n              {({ data, loading, error }) => (\n                <Goal\n                  loading={loading}\n                  error={error}\n                  goal={data && data.goal}\n                />\n              )}\n            </Query>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nexport default GoalWrapped;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from 'react-router';\nimport gql from \"graphql-tag\";\nimport client from 'client';\nimport AuthModel from 'models/Auth';\nimport { GOALS_QUERY } from 'components/Goals';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport Button from 'components/Button';\nimport styles from './styles.module.css';\n\nconst CREATE_GOAL_MUTATION = gql`\n  mutation CreateGoal($auth: AuthInput!, $goalName: String!){\n    createGoal(auth: $auth, goalName: $goalName) {\n      goal {\n        id\n        name\n        dueDate\n        completions {\n          id\n          completedAt\n        }\n      }\n    }\n  }\n`;\n\nclass NewGoal extends Component {\n  nameInput = React.createRef();\n\n  handleGoalCreation = event => {\n    event.preventDefault();\n\n    this.props.createGoal({\n      variables: {\n        goalName: this.nameInput.current.value,\n        auth: this.props.auth\n      }\n    });\n  }\n\n  render() {\n    if (this.props.called && !this.props.loading) {\n      return <Redirect push to=\"/\" />\n    }\n\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <form className={styles.newGoal}>\n          <h1 className={styles.title}>Create Goal</h1>\n          <div className={styles.inputContainer}>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n\n            <input\n              className='name'\n              ref={this.nameInput}\n              name='name-input'\n            />\n          </div>\n\n          <Button\n            onClick={this.handleGoalCreation}\n            className={styles.button}\n          >\n            Create Goal\n          </Button>\n        </form>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nNewGoal.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  called: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  auth: AuthModel.isRequired,\n  createGoal: PropTypes.func.isRequired,\n}\n\nexport { NewGoal };\n\nclass NewGoalWrapped extends Component {\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Mutation\n              mutation={CREATE_GOAL_MUTATION}\n              update={(cache, { data }) => {\n                const { goals } = cache.readQuery({\n                  query: GOALS_QUERY,\n                  variables: { auth }\n                });\n\n                cache.writeQuery({\n                  query: GOALS_QUERY,\n                  variables: { auth },\n                  data: { goals: goals.concat([data.createGoal.goal]) },\n                });\n              }}\n            >\n              {\n                (createGoal, {loading, error, called }) => {\n                  return (\n                    <NewGoal\n                      loading={loading}\n                      error={error}\n                      createGoal={createGoal}\n                      auth={auth}\n                      called={called}\n                    />\n                  )\n                }\n              }\n            </Mutation>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nexport default NewGoalWrapped;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation, Query } from \"react-apollo\";\nimport { Redirect } from 'react-router';\nimport gql from \"graphql-tag\";\nimport client from 'client';\nimport { GOAL_QUERY } from 'components/Goal';\nimport AuthContext from 'components/context/Auth';\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport Button from 'components/Button';\nimport GoalModel from 'models/Goal';\nimport styles from './styles.module.css';\n\nconst UPDATE_GOAL_MUTATION = gql`\n  mutation UpdateGoal($auth: AuthInput!, $name: String!, $id: Int!){\n    updateGoal(auth: $auth, name: $name, id: $id) {\n      goal {\n        id\n      }\n    }\n  }\n`;\n\nclass EditGoal extends Component {\n  state = { name: '' }\n\n  handleGoalUpdate = event => {\n    event.preventDefault();\n    this.props.updateGoal(this.state.name);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.goal && state.name === '') {\n      return { name: props.goal.name }\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <form className={styles.editGoal}>\n          <h1 className={styles.title}>Update Goal</h1>\n          <div className={styles.inputContainer}>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n\n            <input\n              autoFocus\n              className='name'\n              value={this.state.name}\n              onChange={({ target }) => this.setState({ name: target.value })}\n              name='name'\n            />\n          </div>\n\n          <Button\n            onClick={this.handleGoalUpdate}\n            className={styles.button}\n          >\n            Update Goal\n          </Button>\n        </form>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nEditGoal.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  updateGoal: PropTypes.func.isRequired,\n  goal: GoalModel\n}\n\nexport { EditGoal };\n\nexport default class EditGoalWrapped extends Component {\n  render() {\n    const id = parseInt(this.props.match.params.goalId, 10);\n\n    return (\n      <AuthContext.Consumer>\n        {auth => (\n          <ApolloProvider client={client}>\n            <Query\n              query={GOAL_QUERY}\n              variables={{ auth, goalId: id }}\n            >\n              {({ data, loading, error }) => (\n                <Mutation\n                  mutation={UPDATE_GOAL_MUTATION}\n                  refetchQueries={[\n                    {\n                      query: GOAL_QUERY,\n                      variables: { auth, goalId: id }\n                    }\n                  ]}\n                >\n                  {\n                    (updateGoal, {loading, error, called }) => {\n                      if (called && loading) return <Redirect push to={`/goals/${id}`} />\n                      const wrappedUpdateGoal = (name) => \n                        updateGoal({ variables: { id, name, auth } });\n\n                      return (\n                        <EditGoal\n                          loading={loading}\n                          error={error}\n                          updateGoal={wrappedUpdateGoal}\n                          goal={data && data.goal}\n                        />\n                      )\n                    }\n                  }\n                </Mutation>\n              )}\n            </Query>\n          </ApolloProvider>\n        )}\n      </AuthContext.Consumer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from \"react-apollo\";\nimport { Mutation } from \"react-apollo\";\nimport { Redirect } from 'react-router';\nimport { NOTES_QUERY } from 'components/Goal/Notes';\nimport gql from \"graphql-tag\";\nimport client from 'client';\nimport AuthModel from 'models/Auth';\nimport AuthContext from 'components/context/Auth';\nimport SelectedDateContext from \"components/context/SelectedDate\";\nimport LoadingAndErrorHandler from 'components/LoadingAndErrorHandler';\nimport Button from 'components/Button';\nimport styles from './styles.module.css';\n\nconst CREATE_NOTE_MUTATION = gql`\n  mutation CreateNote(\n    $auth: AuthInput!\n    $goalId: Int!\n    $date: ISO8601DateTime!\n    $body: String!\n  ) {\n    createNote(\n      auth: $auth,\n      goalId: $goalId,\n      date: $date,\n      body: $body\n    ) {\n      goal {\n        id\n        notes {\n          id\n          date\n          body\n        }\n      }\n    }\n  }\n`;\n\nclass NewNote extends Component {\n  bodyInput = React.createRef();\n\n  handleNoteCreation = event => {\n    event.preventDefault();\n\n    this.props.createNote({\n      variables: {\n        goalId: this.props.goalId,\n        auth: this.props.auth,\n        body: this.bodyInput.current.value,\n        date: this.props.selectedDate\n      }\n    });\n  }\n\n  render() {\n    if (this.props.called && !this.props.loading) {\n      return <Redirect push to={`/goals/${this.props.goalId}`} />\n    }\n\n    return (\n      <LoadingAndErrorHandler\n        loading={this.props.loading}\n        error={this.props.error}\n      >\n        <form className={styles.newNote}>\n          <h1 className={styles.title}>Create Note</h1>\n\n          <textarea\n            className={styles.bodyField}\n            ref={this.bodyInput}\n            name='note-content'\n          />\n\n          <Button\n            onClick={this.handleNoteCreation}\n            className={styles.button}\n          >\n            Create Note\n          </Button>\n        </form>\n      </LoadingAndErrorHandler>\n    );\n  }\n}\n\nNewNote.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  called: PropTypes.bool.isRequired,\n  error: PropTypes.object,\n  auth: AuthModel.isRequired,\n  createNote: PropTypes.func.isRequired,\n  goalId: PropTypes.number.isRequired,\n  selectedDate: PropTypes.string.isRequired\n}\n\nexport { NewNote };\n\nclass NewNoteWrapped extends Component {\n  render() {\n    return (\n      <SelectedDateContext.Consumer>\n        {selectedDate => (\n          <AuthContext.Consumer>\n            {auth => (\n              <ApolloProvider client={client}>\n                <Mutation\n                  mutation={CREATE_NOTE_MUTATION}\n                  refetchQueries={[\n                    {\n                      query: NOTES_QUERY,\n                      variables: {\n                        auth,\n                        goalId: parseInt(this.props.match.params.goalId, 10)\n                      }\n                    }\n                  ]}\n                >\n                  {\n                    (createNote, {loading, error, called }) => {\n                      return (\n                        <NewNote\n                          loading={loading}\n                          error={error}\n                          createNote={createNote}\n                          auth={auth}\n                          called={called}\n                          goalId={parseInt(this.props.match.params.goalId, 10)}\n                          selectedDate={selectedDate}\n                        />\n                      )\n                    }\n                  }\n                </Mutation>\n              </ApolloProvider>\n            )}\n          </AuthContext.Consumer>\n        )}\n      </SelectedDateContext.Consumer>\n    );\n  }\n}\n\nexport default NewNoteWrapped;\n","import React, { Component } from 'react';\nimport LocalStorage from 'util/LocalStorage';\nimport LogIn from 'components/LogIn';\nimport Header from 'components/Header';\nimport Goals from 'components/Goals';\nimport Goal from 'components/Goal';\nimport NewGoal from 'components/NewGoal';\nimport EditGoal from 'pages/EditGoal';\nimport NewNote from 'components/NewNote';\nimport AuthContext from 'components/context/Auth';\nimport SelectedDateContext from 'components/context/SelectedDate'; import { Route, BrowserRouter as Router } from 'react-router-dom';\n\nconst defaultDate = () => {\n  const today = new Date()\n  let month = today.getMonth() + 1\n  month = month < 10 ? \"0\" + String(month) : String(month)\n\n  let date = today.getDate()\n  date = date < 10 ? \"0\" + String(date) : String(date)\n\n  return `${today.getFullYear()}-${month}-${date}`;\n}\n\n\nclass App extends Component {\n  state = {\n    selectedDate: defaultDate()\n  }\n\n  componentDidMount() {\n    const rememberToken = LocalStorage.getItem('rememberToken')\n    const userId = LocalStorage.getItem('userId')\n\n    if (rememberToken && userId) this.setState({ rememberToken, userId })\n  }\n\n  handleDateChange = event => {\n    event.preventDefault();\n    this.setState({ selectedDate: event.target.value })\n  }\n\n  setAuth = ({ rememberToken, userId }) => {\n    this.setState({ rememberToken, userId })\n\n    LocalStorage.setItem('rememberToken', rememberToken)\n    LocalStorage.setItem('userId', userId)\n  }\n\n  logOut = () => {\n    this.setState({ rememberToken: undefined, userId: undefined })\n\n    LocalStorage.setItem('rememberToken', undefined)\n    LocalStorage.setItem('userId', undefined)\n  }\n\n  auth = () => ({\n    rememberToken: this.state.rememberToken,\n    userId: parseInt(this.state.userId, 10)\n  })\n\n  render() {\n    if (this.state.rememberToken && this.state.userId) {\n      return (\n        <AuthContext.Provider value={this.auth()}>\n          <SelectedDateContext.Provider value={this.state.selectedDate}>\n            <Router>\n              <React.Fragment>\n                <Header\n                  logOut={this.logOut}\n                  selectedDate={this.state.selectedDate}\n                  handleDateChange={this.handleDateChange}\n                />\n                <Route exact path=\"/\" component={Goals} />\n                <Route exact path=\"/new-goal\" component={NewGoal} />\n                <Route exact path=\"/edit-goal/:goalId\" component={EditGoal} />\n                <Route exact path=\"/goals/:goalId\" component={Goal} />\n                <Route exact path=\"/goals/:goalId/new-note\" component={NewNote} />\n              </React.Fragment>\n            </Router>\n          </SelectedDateContext.Provider>\n        </AuthContext.Provider>\n      )\n    }\n\n    return <LogIn setAuth={this.setAuth} />\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'reset-css';\nimport 'index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__107Vo\",\"headerContents\":\"styles_headerContents__nmwje\",\"hamburger\":\"styles_hamburger__2BVCH\",\"selectedDateLabel\":\"styles_selectedDateLabel__1Ne_v\",\"selectedDate\":\"styles_selectedDate__1cSzq\",\"link\":\"styles_link__3jX9z\",\"button\":\"styles_button__hh1XK\",\"headerContentsMobile\":\"styles_headerContentsMobile__3QgIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goal\":\"styles_goal__9H5mM\",\"title\":\"styles_title__3KNpG\",\"controls\":\"styles_controls__1X3RY\",\"spacer\":\"styles_spacer__30V3s\",\"newGoalButton\":\"styles_newGoalButton__3IiSW\",\"editGoalButton\":\"styles_editGoalButton__2QZUR\",\"completion\":\"styles_completion__29k1Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tick\":\"styles_tick__IBPxw\",\"hideTick\":\"styles_hideTick__u_dwi\",\"background\":\"styles_background__1h5X4\",\"tickCover\":\"styles_tickCover__25ek9\",\"tickCoverChecked\":\"styles_tickCoverChecked__UL1G-\",\"ghostTick\":\"styles_ghostTick__1Pog1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heatMap\":\"styles_heatMap__3MHfQ\",\"header\":\"styles_header__1D8Cf\",\"dateForm\":\"styles_dateForm__3b_9k\",\"startDate\":\"styles_startDate__37N4f\",\"label\":\"styles_label__1QF5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"styles_notes__1yWyA\",\"header\":\"styles_header__3MxGy\",\"note\":\"styles_note__3TQlA\",\"noteHeader\":\"styles_noteHeader__3BsTu\",\"date\":\"styles_date__28F7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newGoal\":\"styles_newGoal__1THEs\",\"title\":\"styles_title__3ZWgQ\",\"button\":\"styles_button__j2kG9\",\"inputContainer\":\"styles_inputContainer__1ovMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editGoal\":\"styles_editGoal__90V3R\",\"title\":\"styles_title__oO1vz\",\"button\":\"styles_button__3SJx-\",\"inputContainer\":\"styles_inputContainer__1JyDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newNote\":\"styles_newNote__SPfBG\",\"title\":\"styles_title__1zD5_\",\"bodyField\":\"styles_bodyField__3XEgw\",\"button\":\"styles_button__3vwfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickBox\":\"styles_tickBox__3PnN0\",\"button\":\"styles_button__10_3p\",\"buttonText\":\"styles_buttonText__rPoh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goal\":\"styles_goal__34Y31\",\"goalName\":\"styles_goalName__2-vML\",\"completionContainer\":\"styles_completionContainer__WLz3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"styles_text__2-7Gn\",\"confirm\":\"styles_confirm__2ULQZ\",\"cancel\":\"styles_cancel__Okk5r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__2YrD5\",\"modalInner\":\"styles_modalInner__2G8N3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__3j4M3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburger\":\"styles_hamburger__3-Izt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__KQuah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__2fZJ7\"};"],"sourceRoot":""}